=begin
#Gitea API.

#This documentation describes the Gitea API.

The version of the OpenAPI document: {{AppVer | JSEscape | Safe}}

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.4.0

=end

require 'spec_helper'
require 'json'

# Unit tests for GiteaRubyClient::NotificationApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'NotificationApi' do
  before do
    # run before each test
    @api_instance = GiteaRubyClient::NotificationApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of NotificationApi' do
    it 'should create an instance of NotificationApi' do
      expect(@api_instance).to be_instance_of(GiteaRubyClient::NotificationApi)
    end
  end

  # unit tests for notify_get_list
  # List users&#39;s notification threads
  # @param [Hash] opts the optional parameters
  # @option opts [Boolean] :all If true, show notifications marked as read. Default value is false
  # @option opts [Array<String>] :status_types Show notifications with the provided status types. Options are: unread, read and/or pinned. Defaults to unread &amp; pinned.
  # @option opts [Array<String>] :subject_type filter notifications by subject type
  # @option opts [Time] :since Only show notifications updated after the given time. This is a timestamp in RFC 3339 format
  # @option opts [Time] :before Only show notifications updated before the given time. This is a timestamp in RFC 3339 format
  # @option opts [Integer] :page page number of results to return (1-based)
  # @option opts [Integer] :limit page size of results
  # @return [Array<NotificationThread>]
  describe 'notify_get_list test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for notify_get_repo_list
  # List users&#39;s notification threads on a specific repo
  # @param owner owner of the repo
  # @param repo name of the repo
  # @param [Hash] opts the optional parameters
  # @option opts [Boolean] :all If true, show notifications marked as read. Default value is false
  # @option opts [Array<String>] :status_types Show notifications with the provided status types. Options are: unread, read and/or pinned. Defaults to unread &amp; pinned
  # @option opts [Array<String>] :subject_type filter notifications by subject type
  # @option opts [Time] :since Only show notifications updated after the given time. This is a timestamp in RFC 3339 format
  # @option opts [Time] :before Only show notifications updated before the given time. This is a timestamp in RFC 3339 format
  # @option opts [Integer] :page page number of results to return (1-based)
  # @option opts [Integer] :limit page size of results
  # @return [Array<NotificationThread>]
  describe 'notify_get_repo_list test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for notify_get_thread
  # Get notification thread by ID
  # @param id id of notification thread
  # @param [Hash] opts the optional parameters
  # @return [NotificationThread]
  describe 'notify_get_thread test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for notify_new_available
  # Check if unread notifications exist
  # @param [Hash] opts the optional parameters
  # @return [NotificationCount]
  describe 'notify_new_available test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for notify_read_list
  # Mark notification threads as read, pinned or unread
  # @param [Hash] opts the optional parameters
  # @option opts [Time] :last_read_at Describes the last point that notifications were checked. Anything updated since this time will not be updated.
  # @option opts [String] :all If true, mark all notifications on this repo. Default value is false
  # @option opts [Array<String>] :status_types Mark notifications with the provided status types. Options are: unread, read and/or pinned. Defaults to unread.
  # @option opts [String] :to_status Status to mark notifications as, Defaults to read.
  # @return [Array<NotificationThread>]
  describe 'notify_read_list test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for notify_read_repo_list
  # Mark notification threads as read, pinned or unread on a specific repo
  # @param owner owner of the repo
  # @param repo name of the repo
  # @param [Hash] opts the optional parameters
  # @option opts [String] :all If true, mark all notifications on this repo. Default value is false
  # @option opts [Array<String>] :status_types Mark notifications with the provided status types. Options are: unread, read and/or pinned. Defaults to unread.
  # @option opts [String] :to_status Status to mark notifications as. Defaults to read.
  # @option opts [Time] :last_read_at Describes the last point that notifications were checked. Anything updated since this time will not be updated.
  # @return [Array<NotificationThread>]
  describe 'notify_read_repo_list test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for notify_read_thread
  # Mark notification thread as read by ID
  # @param id id of notification thread
  # @param [Hash] opts the optional parameters
  # @option opts [String] :to_status Status to mark notifications as
  # @return [NotificationThread]
  describe 'notify_read_thread test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
